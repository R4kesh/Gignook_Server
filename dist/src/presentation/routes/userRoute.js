"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = require("../controller/userController/userController");
const userRepository_1 = require("../../infrastructure/repository/userRepository");
const userUseCase_1 = require("../../application/usecase/userUseCase");
const userAuth_1 = __importDefault(require("../../middleware/userAuth"));
const FileUpload_1 = __importDefault(require("../../middleware/FileUpload"));
const router = express_1.default.Router();
const repository = new userRepository_1.userRepository();
const usecase = new userUseCase_1.userUseCase(repository);
const controller = new userController_1.userController(usecase);
router.post('/signup', controller.signupPost.bind(controller));
router.get('/verify', controller.verifyEmail.bind(controller));
router.post('/login', controller.loginVerify.bind(controller));
router.post('/google', controller.googleSign.bind(controller));
router.post('/forgotpassword', controller.forgetPasswordSendEmail.bind(controller));
router.post('/verifyforgototp', controller.verifyForgetOtp.bind(controller));
router.post('/forgotresetpassword', controller.forgetResetPassword.bind(controller));
router.get('/allUser/:id', userAuth_1.default, controller.notBlocked.bind(controller));
router.post('/switchfreelancer', userAuth_1.default, controller.freelancerOrNot.bind(controller));
router.get('/listFreelancers', userAuth_1.default, controller.listFreelancers.bind(controller));
router.post('/post/:id', controller.postUpload.bind(controller));
router.post('/postFile/:id', FileUpload_1.default.array('files', 2), controller.postFile.bind(controller));
router.put('/postDatas/:id/:postId', controller.postDatas.bind(controller));
router.get('/listWorks', controller.listWorks.bind(controller));
router.post('/payment', controller.gigPayment.bind(controller));
router.post('/feedback', controller.feedback.bind(controller));
router.get('/postList/:id', controller.postList.bind(controller));
router.get('/paymentHistory/:id', controller.paymentHistory.bind(controller));
router.get('/name/:id', controller.findUser.bind(controller));
router.get('/conversations/:id', controller.conversation.bind(controller));
router.get('/users/:id', controller.users.bind(controller));
router.get('/message/:conversationId', controller.messageConversations.bind(controller));
router.post('/message', controller.message.bind(controller));
exports.default = router;
